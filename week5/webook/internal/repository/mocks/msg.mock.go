// Code generated by MockGen. DO NOT EDIT.
// Source: ./webook/internal/repository/msg.go
//
// Generated by this command:
//
//	mockgen -source=./webook/internal/repository/msg.go -package=repomocks -destination=./webook/internal/repository/mocks/msg.mock.go
//
// Package repomocks is a generated GoMock package.
package repomocks

import (
	context "context"
	reflect "reflect"

	domain "gitee.com/geekbang/basic-go/webook/internal/domain"
	gomock "go.uber.org/mock/gomock"
)

// MockMsgRepository is a mock of MsgRepository interface.
type MockMsgRepository struct {
	ctrl     *gomock.Controller
	recorder *MockMsgRepositoryMockRecorder
}

// MockMsgRepositoryMockRecorder is the mock recorder for MockMsgRepository.
type MockMsgRepositoryMockRecorder struct {
	mock *MockMsgRepository
}

// NewMockMsgRepository creates a new mock instance.
func NewMockMsgRepository(ctrl *gomock.Controller) *MockMsgRepository {
	mock := &MockMsgRepository{ctrl: ctrl}
	mock.recorder = &MockMsgRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMsgRepository) EXPECT() *MockMsgRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockMsgRepository) Create(ctx context.Context, msg domain.Msg) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, msg)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockMsgRepositoryMockRecorder) Create(ctx, msg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockMsgRepository)(nil).Create), ctx, msg)
}

// FindById mocks base method.
func (m *MockMsgRepository) FindById(ctx context.Context, uid int64) (domain.Msg, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindById", ctx, uid)
	ret0, _ := ret[0].(domain.Msg)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindById indicates an expected call of FindById.
func (mr *MockMsgRepositoryMockRecorder) FindById(ctx, uid any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindById", reflect.TypeOf((*MockMsgRepository)(nil).FindById), ctx, uid)
}
